-- Вложенный запрос используется для выборки данных, которые будут использоваться в условии отбора записей основного запроса. Его применяют для:

-- сравнения выражения с результатом вложенного запроса;
-- определения того, включено ли выражение в результаты вложенного запроса;
-- проверки того, выбирает ли запрос определенные строки.
-- Вложенный запрос имеет следующие компоненты:

-- ключевое слово SELECT  после которого указываются имена столбцов или выражения (чаще всего список содержит один элемент) ;
-- ключевое слово FROM и имя таблицы, из которой выбираются данные;
-- необязательное предложение WHERE;
-- необязательное предложение GROUP BY:
-- необязательное предложение HAVING.
--  Вложенные запросы  могут включаться в WHERE или HAVING так (в квадратных скобках указаны необязательные элементы, через | – один из элементов):

-- WHERE | HAVING выражение оператор_сравнения (вложенный запрос);
-- WHERE | HAVING выражение, включающее вложенный запрос;
-- WHERE | HAVING выражение [NOT] IN (вложенный запрос);
-- WHERE | HAVING выражение  оператор_сравнения  ANY | ALL (вложенный запрос).
-- Также вложенные запросы могут вставляться в основной запрос после ключевого слова SELECT.


-- Все запросы в данном уроке будут формулироваться для таблицы book(создание, заполнение):

-- book_id							title					author				price			amount
-- INT PRIMARY KEY AUTO_INCREMENT	VARCHAR(50)				VARCHAR(30)			DECIMAL(8,2)	INT
-- 1								Мастер и Маргарита		Булгаков М.А.		670.99			3
-- 2								Белая гвардия			Булгаков М.А.		540.50			5
-- 3								Идиот					Достоевский Ф.М.	460.00			10
-- 4								Братья Карамазовы		Достоевский Ф.М.	799.01			3
-- 5								Игрок					Достоевский Ф.М.	480.50			10
-- 6								Стихотворения и поэмы	Есенин С.А.			650.00			15

--  ------------------------------------------------------  Вложенный запрос, возвращающий одно значение
-- Пример
-- Вывести информацию о самых дешевых книгах, хранящихся на складе.
-- Для реализации этого запроса нам необходимо получить минимальную цену из столбца price таблицы book, а затем вывести информацию о тех книгах, цена которых  равна минимальной. Первая часть  – поиск  минимума – реализуется вложенным запросом.
-- Запрос:
SELECT title, author, price, amount
FROM book
WHERE price = (
         SELECT MIN(price) 
         FROM book
      );
      
-- Пример
-- Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.
-- Запрос:
SELECT author, title, price 
FROM book
WHERE price <= (
         SELECT AVG(price) 
         FROM book
      )ORDER BY price DESC;
      
--  ------------------------------------------------------  Использование вложенного запроса в выражении
-- Пример
-- Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3. То есть нужно вывести и те книги, количество экземпляров которых меньше среднего на 3, или больше среднего на 3.
-- Запрос:
SELECT title, author, amount 
FROM book
WHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;

-- Пример
-- Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.
-- Запрос:
SELECT author, title, price 
FROM book
WHERE price BETWEEN 
    (SELECT MIN(price) FROM book) AND 
    (SELECT MIN(price) FROM book) + 150 
    ORDER BY price;

--  ------------------------------------------------------  Вложенный запрос, оператор IN
-- Пример
-- Вывести информацию о книгах тех авторов, общее количество экземпляров книг которых не менее 12.
-- Запрос:
SELECT title, author, amount, price
FROM book
WHERE author IN (
        SELECT author 
        FROM book 
        GROUP BY author 
        HAVING SUM(amount) >= 12
      );

-- Пример
-- Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.
-- Запрос:
SELECT author, title, amount 
FROM book WHERE amount IN (
SELECT amount
FROM book GROUP BY amount HAVING count(amount)=1);

--  ------------------------------------------------------  Вложенный запрос, операторы ANY и ALL
-- Пример
-- Вывести информацию о тех книгах, количество которых меньше самого маленького среднего количества книг каждого автора.
-- Запрос:
SELECT title, author, amount, price
FROM book
WHERE amount < ALL (
        SELECT AVG(amount) 
        FROM book 
        GROUP BY author 
      );

-- Пример
-- Вывести информацию о тех книгах, количество которых меньше самого большого среднего количества книг каждого автора.
-- Запрос:
SELECT title, author, amount, price
FROM book
WHERE amount < ANY (
        SELECT AVG(amount) 
        FROM book 
        GROUP BY author 
      );
      
-- Пример
-- Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.
-- Запрос:
SELECT author, title, price
FROM book 
WHERE price < ANY (SELECT MIN(price) FROM book GROUP BY author);

--  ------------------------------------------------------  Вложенный запрос после SELECT
-- Пример
-- Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3,  а также указать среднее значение количества экземпляров книг.
-- Запрос:
SELECT title, author, amount, 
    (
     SELECT AVG(amount) 
     FROM book
    ) AS Среднее_количество 
FROM book
WHERE abs(amount - (SELECT AVG(amount) FROM book)) >3;

-- Среднее количество в виде дробного числа выглядит не очень правильно. Полученное значение можно округлить "вниз" - до ближайшего меньшего целого.
-- Запрос:
SELECT title, author, amount, 
      FLOOR((SELECT AVG(amount) FROM book)) AS Среднее_количество 
FROM book
WHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;

-- Пример
-- Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. 
-- Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. 
-- В результат не включать книги, которые заказывать не нужно.
-- Запрос:
SELECT title, author, amount, 
      FLOOR((SELECT MAX(amount) FROM book)) - amount AS Заказ
FROM book
WHERE ABS(amount -(SELECT MAX(amount) FROM book)) !=0;


